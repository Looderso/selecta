selecta/
├── pyproject.toml           # Project metadata and dependencies
├── README.md                # Project documentation
├── .gitignore               # Git ignore file
├── .ruff.toml               # Ruff configuration
├── src/
│   ├── selecta/       # Main package
│   │   ├── __init__.py      # Package initialization
│   │   ├── __main__.py      # Entry point
│   │   ├── app.py           # Main application class
│   │   ├── config/          # Configuration management
│   │   │   ├── __init__.py
│   │   │   ├── settings.py  # Application settings
│   │   │   └── constants.py # Application constants
│   │   ├── gui/             # GUI components
│   │   │   ├── __init__.py
│   │   │   ├── main_window.py  # Main application window
│   │   │   ├── playlist_view/  # Unified playlist view components
│   │   │   │   ├── __init__.py
│   │   │   │   ├── unified_playlist_browser.py  # Main playlist browser
│   │   │   │   ├── playlist_item.py             # Single playlist view
│   │   │   │   ├── track_item.py                # Track item in playlist
│   │   │   │   └── filter_panel.py              # Filtering options
│   │   │   ├── widgets/     # Reusable widgets
│   │   │   │   ├── __init__.py
│   │   │   │   ├── platform_indicators.py  # Visual indicators for platforms
│   │   │   │   ├── track_details_panel.py  # Detailed track info
│   │   │   │   ├── search_bar.py           # Global search functionality
│   │   │   │   └── vinyl_status_badge.py   # Badge showing vinyl status
│   │   │   └── themes/      # Theming and styling
│   │   │       ├── __init__.py
│   │   │       ├── theme_manager.py        # Central theme management
│   │   │       ├── base_theme.py           # Base theme definition
│   │   │       ├── platform_themes.py      # Platform-specific color schemes
│   │   │       └── apply_theme.py          # Theme application utilities
│   │   ├── platform/        # Platform-specific integrations
│   │   │   ├── __init__.py
│   │   │   ├── platform_factory.py         # Factory for platform clients
│   │   │   ├── abstract_platform.py        # Abstract base platform class
│   │   │   ├── rekordbox/
│   │   │   │   ├── __init__.py
│   │   │   │   ├── client.py               # Rekordbox DB access
│   │   │   │   ├── sync.py                 # Rekordbox sync functionality
│   │   │   │   └── models.py               # Rekordbox data models
│   │   │   ├── spotify/
│   │   │   │   ├── __init__.py
│   │   │   │   ├── client.py               # Spotify API client
│   │   │   │   ├── sync.py                 # Spotify sync functionality
│   │   │   │   └── models.py               # Spotify data models
│   │   │   └── discogs/
│   │   │       ├── __init__.py
│   │   │       ├── client.py               # Discogs API client
│   │   │       ├── sync.py                 # Discogs sync functionality
│   │   │       ├── vinyl_matcher.py        # Match tracks to vinyl records
│   │   │       └── models.py               # Discogs data models
│   │   ├── library/         # Core unified library management
│   │   │   ├── __init__.py
│   │   │   ├── unified_library.py          # Central library manager
│   │   │   ├── playlist_manager.py         # Manages playlists across platforms
│   │   │   ├── track_matcher.py            # Matches tracks across platforms
│   │   │   ├── sync_manager.py             # Manages library synchronization
│   │   │   └── models/                     # Domain models
│   │   │       ├── __init__.py
│   │   │       ├── track.py                # Universal track model
│   │   │       ├── playlist.py             # Universal playlist model
│   │   │       ├── album.py                # Album information model
│   │   │       └── vinyl.py                # Vinyl record model
│   │   ├── utils/           # Utility functions
│   │   │   ├── __init__.py
│   │   │   ├── logging.py                  # Logging configuration
│   │   │   ├── file_utils.py               # File operations helpers
│   │   │   ├── path_helper.py              # Path management utilities
│   │   │   └── track_analyzer.py           # Audio file analysis utilities
│   │   └── data/            # Data persistence
│   │       ├── __init__.py
│   │       ├── database.py                 # Database connection management
│   │       ├── repositories/               # Data access layer
│   │       │   ├── __init__.py
│   │       │   ├── track_repository.py     # Track data access
│   │       │   ├── playlist_repository.py  # Playlist data access
│   │       │   └── vinyl_repository.py     # Vinyl record data access
│   │       └── migrations/                 # Database migrations
│   │           ├── __init__.py
│   │           └── versions/               # Migration versions
│   └── tests/               # Test directory
│       ├── __init__.py
│       ├── conftest.py                     # Test fixtures
│       ├── test_app.py                     # App tests
│       ├── platform/                       # Platform integration tests
│       │   ├── test_rekordbox.py
│       │   ├── test_spotify.py
│       │   └── test_discogs.py
│       ├── library/                        # Library management tests
│       │   ├── test_unified_library.py
│       │   ├── test_playlist_manager.py
│       │   └── test_track_matcher.py
│       └── gui/                            # GUI tests
│           ├── test_playlist_view.py
│           └── test_themes.py
├── scripts/                 # Build and development scripts
│   ├── build_macos.sh                      # macOS build script
│   └── dev_setup.sh                        # Development environment setup
└── resources/               # Application resources
    ├── images/                             # Image assets
    │   ├── app_icon.png                    # App icon
    │   ├── platform_icons/                 # Platform-specific icons
    │   │   ├── spotify.png
    │   │   ├── discogs.png
    │   │   └── rekordbox.png
    │   └── vinyl_icons/                    # Vinyl-related icons
    │       ├── vinyl_owned.png
    │       ├── vinyl_wishlist.png
    │       └── vinyl_for_sale.png
    ├── fonts/                              # Font assets
    └── kv/                                 # Kivy KV files
        ├── app.kv                          # Main KV file
        ├── playlist_view/                  # Playlist view KV files
        │   ├── unified_playlist_browser.kv
        │   ├── playlist_item.kv
        │   └── track_item.kv
        └── widgets/                        # Widget KV files
            ├── platform_indicators.kv
            ├── track_details_panel.kv
            └── search_bar.kv